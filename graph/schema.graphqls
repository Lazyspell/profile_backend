# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type ProfileQL {
    first_name: String!
    last_name: String!
    dob: DateOfBirth!
    location: Location!
    skills: Categories
    projects: [Application]
    contact: ContactInfo!
    experience: [Job]
    quotes: [Quote]
}

type Location {
    state: String!
    city: String!
    zip_code: Int!
}

type Quote {
    saying: String!
    source: String!
    source_link: String!
}

type DateOfBirth {
    day: Int!
    month: String!
    year: Int!
    age: Int!
}

type Application {
    project_name: String!
    project_description: String!
    project_links: [String!]!
    tech_used: [String!]!
}

type ExternalEmail {
    email_name: String!
    email_address: String!
    email_subject: String!
    email_message: String!
}

type ContactInfo {
    phone_number: String!
    email: String!
    github: String!
    linkedin: String!
    discord: String!
    about_me: String!
    about_my_career: String!
}

type Categories {
    frontend: [Technologies]
    backend: [Technologies]
    machine_learning: [Technologies]
    cloud_service: [Technologies]
}

type Technologies {
    tech_name: String!
    tech_link: String!
    image_url: String!
    years_of_experience: Int!
    tech_description: String!
    category: String!
    category_description: String!
}

type Job {
    company_name: String!
    work_description: String!
    years_worked: Int!
    tech_used: [String!]!
}

# _____________________________________INPUT AREA_____________________________________

input InputProfile {
    first_name: String
    last_name: String
    location: InputLocation
    skills: InputCategories
    dob: InputDateOfBirth
    projects: [InputApplication]
    contact: InputContactInfo
    experience: [InputJob]
    quotes: [InputQuote]
}

input InputQuote {
    saying: String!
    source: String!
    source_link: String!
}

input InputContactInfo {
    phone_number: String!
    email: String!
    github: String!
    linkedin: String!
    discord: String!
    about_me: String!
    about_my_career: String!
}
input InputExternalEmail {
    email_name: String!
    email_address: String!
    email_subject: String!
    email_message: String!
}

input InputCategories {
    frontend: [InputTechnologies]
    backend: [InputTechnologies]
    machine_learning: [InputTechnologies]
    cloud_service: [InputTechnologies]
}

input InputTechnologies {
    tech_name: String!
    tech_link: String!
    image_link: String!
    years_of_experience: Int!
    tech_description: String!
    category: String!
    category_description: String!
}

input InputApplication {
    project_name: String!
    project_description: String!
    project_links: [String!]!
    tech_used: [String!]!
}

input InputJob {
    company_name: String!
    work_description: String!
    years_worked: Int!
    tech_used: [String!]!
}

input InputDateOfBirth {
    day: Int!
    month: String!
    year: Int!
    age: Int!
}

input InputLocation {
    state: String!
    city: String!
    zip_code: Int!
}

# _____________________________________QUERY AND MUTATION_____________________________________

type Query {
    profileId(email: String!): ProfileQL!
    profile: [ProfileQL!]!
}

type Mutation {
    createProfile(input: InputProfile!): ProfileQL!
    sendEmail(input: InputExternalEmail!): String!
    updateSkills(
        input: InputTechnologies!
        category: String!
        email: String!
    ): ProfileQL!
    updateProjects(input: InputApplication!, email: String!): ProfileQL!
    updateJob(input: InputJob!, email: String!): ProfileQL!
    updateQuotes(input: InputQuote!, email: String!): ProfileQL!
}
